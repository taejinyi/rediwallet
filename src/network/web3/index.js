import axios from 'axios'
import Web3 from 'web3'
// import * as network from 'rediwallet/src/network/index'
import {call} from "redux-saga/effects";
import {generateAccount, getWalletFromNetwork} from "../../pages/Wallet/sagas";

//import infleumContract from 'rediwallet/contracts/Infleum.json'
// import {
//   NonceTxMiddleware, SignedTxMiddleware, Client,
//   Address, LocalAddress, CryptoUtils, LoomProvider, EvmContract
// } from 'loom-js'
const mainnet = new Web3(
  new Web3.providers.HttpProvider('https://mainnet.infura.io/'),
);

const chainId    = 'default'
const writeUrl   = 'https://loom.socu.io/rpc'
const readUrl    = 'https://loom.socu.io/query'
const infleumAddress = '0x3f8707f0bbe588beef388e00780e1bc40f284395'

// ./privateKey file contains a base64 encoded key generated by the command:
// loom genkey -a publicKey -k privateKey

// const loom = new Web3(
//   new Web3.providers.HttpProvider('https://loom.socu.io/rpc'),
// );

const getBalance = async (address) => {
  console.log('in getBalance')
  return 0
  // const privateKey = "privateKey"
  // const loom = new Web3(
  //   new LoomTruffleProvider(chainId, writeUrl, readUrl, privateKey)
  // );
  // try {
  //   return await loom.eth.getBalance(address)
  // } catch (error) {
  //   return 0
  // }
}
//
// const doSignUp = async (signupData) => {
//   try {
//     const response = await axios.post(globals.API_SIGNUP, signupData)
//     return response
//   } catch(error) {
//     return error.response
//   }
// }
//
// const doSignIn = async (signinData) => {
//   try {
//     const response = await axios.post(globals.API_SIGNIN, signinData)
//     return response
//   } catch(error) {
//     return error.response
//   }
// }

export {
  // doSignUp,
  // doSignIn,
  getBalance,
}
